varnishtest "xkey"

server s1 {
    # first request will be the probe, handle it and be on our way
    rxreq
    expect req.url == "/health_check.php"
    txresp

    # the probe expects the connection to close
    close
    accept

    rxreq
    txresp -hdr "answer-to: GET" -hdr "X-Magento-Tags: cat_c,cat_c_38,cat_c_20,cat_c_11,cat_c_3,cat_c_9,cat_c_3"

    rxreq
    txresp -hdr "answer-to: PURGE"

    rxreq
    txresp -hdr "answer-to: GET"
} -start

# generate usable VCL pointing towards s1
# mostly, we replace the place-holders, but we also jack up the probe
# interval to avoid further interference
shell {
    # testdir is automatically set to the directory containing the present vtc
        sed \
            -e 's@\.interval = 5s;@.interval = 5m; .initial = 10;@' \
            -e 's@{{var host}}@${s1_addr}@' \
            -e 's@{{var port}}@${s1_port}@' \
            -e 's@{{var ssl_offloaded_header}}@unused@' \
            -e 's@{{var grace_period}}@100@' \
            -e 's@{{var ips}}@"${s1_addr}";@' \
            -e 's@{{.*}}@\/* REPLACED *\/@' \
        ${testdir}/../../etc/varnish6.vcl > ${tmpdir}/output.vcl
}

varnish v1 -arg "-f" -arg "${tmpdir}/output.vcl" -start

# make surethe probe request fired
delay 1

client c1 {
    txreq -method "GET" - url "/"
    txreq
    rxresp
    expect resp.http.answer-to == "GET"
    expect resp.http.X-Magento-Cache-Debug == "MISS"

    txreq
    rxresp
    expect resp.http.answer-to == "GET"
    expect resp.http.X-Magento-Cache-Debug == "HIT"
} -run

logexpect l1 -v v1 -b {
	expect * * VCL_Error "illegal resp.status .99. ...0##."
	expect * * VCL_Error "resp.status .65536. > 65535"
	expect * * VCL_Error "resp.status .-200. is negative"
} -start